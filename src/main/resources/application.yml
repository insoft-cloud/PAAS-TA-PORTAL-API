# Spring properties
spring:
  application:
    name: PortalApi  # Service registers under this name
  security:
    username: admin
    password: openpaasta
  flyway:
    enabled: false

#Spring config setting (current version not used)
#  boot:
#    #Spring boot admin settings
#    admin:
#      routes:
#        endpoints: env,metrics,trace,info,trace,heapdump,hystrix.stream,docs,turbine
#        #Timeintervalin ms to update the status of App
#      monitor:
#        perio: 10000
#        #LifeTime of App status in ms.
#        status-lifetime: 10000
#        #Connection Timeout in ms when App's status and info
#        connect-timeout: 2000
#        #Read Timeout in ms when App's status and info
#        read-timeout: 5000
#      metadata-keys-to-sanitize: .password$,.*secret$,.*key$,.$token$,.credentials.,.*vcap_services$

#Infra Admin Settings (current version not used)
#project:
#  name: paasta-api
#  artifactId: paasta-cf-api
#  description: paasta-cf-api management service
#info:
#  app:
#    encoding: Encoding - UTF-8
#  java:
#    source: Source - java ver
#    target: Instance1 - Java ver
#  spring:
#    profiles: ${spring.profiles.active:default}
#  build:
#    name: ${project.name}
#    artifact: ${project.artifactId}
#    description: ${project.description}

# HTTP Server
server:
  port: ${PORT:2222}   # HTTP (Tomcat) port

tailsocket:
  port: 5555

management:     # If you set off security...
  security:
    enabled: false

#Hystrix Setting(current version not used)
#hystrix:
#  threadpool:
#    default:
#      # Maximum number of concurrent requests when using thread pools (Default: 10)
#      coreSize: 100
#      # Maximum LinkedBlockingQueue size - -1 for using SynchronousQueue (Default: -1)
#      maxQueueSize: -1
#      # Queue size rejection threshold (Default: 5)
#      queueSizeRejectionThreshold: 5
#  command:
#    default:
#      circuitBreaker:
#        sleepWindowInMilliseconds: 60000
#        requestVolumeThreshold: 3
#      execution:
#        isolation:
#          #strategy: SEMAPHORE, no thread pool but timeout handling stops to work
#          strategy: THREAD
#          thread:
#            timeoutInMilliseconds: 60000


# CloudFoundry API Url
cloudfoundry:
  cc:
    api:
      url: https://api.XXX.XXX.XXX.XXX.xip.io # YOUR API URL
      uaaUrl: https://uaa.XXX.XXX.XXX.XXX.xip.io # YOUR UAA API URL
      sslSkipValidation: true
  # CloudFoundry Login information
  user:
    admin:
      username: admin # YOUR CF ADMIN ACCOUT
      password: 'PASSWORD' # YOUR CF ADMIN PASSWORD
    uaaClient:
      clientId: login
      clientSecret: login-secret
      adminClientId: admin
      adminClientSecret: admin-secret
      loginClientId: login
      loginClientSecret: login-secret
      skipSSLValidation: true
  authorization: cf-Authorization


abacus:
  url: http://paasta-usage-reporting.XXX.XXX.XXX.XXX.xip.io/v1 # YOUR ABACUS API URL

# 포탈 상세 모니터링
monitoring:
  api:
    url: http://monitapi.XXX.XXX.XXX.XXX.xip.io # YOUR MONITORING API URL

multipart:
  maxFileSize: 1000Mb
  maxRequestSize: 1000Mb



---
spring:
  profiles: local
  Socket: 'The host information for the socket is set to Localhost'
paasta:
  portal:
    api:
      authorization:
        base64: Basic YWRtaW46b3BlbnBhYXN0YQ==
      zuulUrl:
        cfapi: http://localhost:2225/portalapi # YOUR LOCAL TEST SETTING
        commonapi: http://localhost:2225/commonapi # YOUR LOCAL TEST SETTING
        storageapi: http://localhost:2225/storageapi # YOUR LOCAL TEST SETTING
    storageapi:
      type: swift

eureka:
  client:
    serviceUrl:
      defaultZone: http://127.0.0.1:2221/eureka/ #YOUR LOCAL TEST SETTING
      registry-fetch-interval-seconds: 5
  instance:
    hostname: ${spring.cloud.client.hostname}
    lease-expiration-duration-in-seconds: 5
    lease-renewal-interval-in-seconds: 10

---
spring:
  profiles: dev
  Socket: 'The host information for the socket is set to ServerIP'
paasta:
  portal:
    api:
      authorization:
        base64: Basic YWRtaW46b3BlbnBhYXN0YQ==
      zuulUrl:
        cfapi: http://XXX.XXX.XXX.XXX:2225/portalapi #YOUR GATEWAY SERVICE DEV SETTING(ACTIVE INFORMATION)
        commonapi: http://XXX.XXX.XXX.XXX:2225/commonapi #YOUR GATEWAY SERVICE DEV SETTING(ACTIVE INFORMATION)
        storageapi: http://XXX.XXX.XXX.XXX:2225/storageapi #YOUR GATEWAY SERVICE DEV SETTING(ACTIVE INFORMATION)
    storageapi:
      type: swift

eureka:
  client:
    serviceUrl:
      defaultZone: http://XXX.XXX.XXX.XXX:2221/eureka/ #YOUR EUREKA SERVICE DEV SETTING(ACTIVE INFORMATION)
      registry-fetch-interval-seconds: 5
  instance:
    hostname: ${spring.cloud.client.hostname}
    lease-expiration-duration-in-seconds: 5
    lease-renewal-interval-in-seconds: 10